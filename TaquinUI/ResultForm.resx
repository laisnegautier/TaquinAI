<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="leftButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CLvJvV0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="rightButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>